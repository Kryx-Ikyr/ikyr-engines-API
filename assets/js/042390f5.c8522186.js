"use strict";(self.webpackChunkikyr_engines=self.webpackChunkikyr_engines||[]).push([[772],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return t?r.createElement(m,l(l({ref:n},p),{},{components:t})):r.createElement(m,l({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=d;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8132:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),l=["components"],a={},c="Hello World !",s={unversionedId:"ire/hello_world",id:"ire/hello_world",isDocsHomePage:!1,title:"Hello World !",description:"Here is some simple code you can use to test if your configuration is working.",source:"@site/docs/ire/hello_world.md",sourceDirName:"ire",slug:"/ire/hello_world",permalink:"/docs/ire/hello_world",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/ire/hello_world.md",version:"current",frontMatter:{},sidebar:"ireSidebar",previous:{title:"Installation",permalink:"/docs/ire/installation"},next:{title:"Hello world step by step",permalink:"/docs/ire/explain_hello_world"}},p=[],u={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hello-world-"},"Hello World !"),(0,i.kt)("p",null,"Here is some simple code you can use to test if your configuration is working."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#define VULKAN_COMPIL\n#include "IkyrRenderEngineAPI.h"\n\n#define IRE Ikyr::Renderer\n\nint main()\n{\n    IRE::System *system = new IRE::System();\n    system->init();\n\n    IRE::ContextOptions contextOptions;\n    contextOptions.bufferingStrategy = IRE::BufferingStrategy::TRIPLE_BUFFERING;\n    contextOptions.displayMode = IRE::DisplayMode::MAILBOX;\n    IRE::Context *context = new IRE::Context(system, contextOptions);\n\n    IRE::RenderWindowOptions options;\n    options.fullscreen = false;\n    options.createDepthStencilBuffer  = false;\n    IRE::RenderWindow *window = new IRE::RenderWindow(options, context, 1366, 768);\n    \n    IRE::Camera2D *camera = new IRE::Camera2D();\n    window->setCamera(camera);\n    camera->setClipping(glm::vec2(-10000.0f, 10000.0f));\n    camera->setPosition(glm::vec2(0.0f, 768.0f));\n    camera->setViewport(IRE::Viewport(0, 0, 100, 100, true));\n    camera->setScissor(IRE::Scissor(true));\n\n    IRE::Rectangle2D *object = new IRE::Rectangle2D(context, 30, 30, currentTexture, false);// IRE::Color::Color(246, 156, 67));\n    object->prepareFor(window);\n    object->setTexture(window, textures.at(textureIndex));\n    int posX = (objects.size() % 40) * 35 - 17;\n    int posY = std::floor(objects.size() / 40) * 35 + 17;\n    object->setPosition(glm::vec2(posX, posY));\n    object->setDepth(objects.size());\n\n    bool mustStayOpen = true;\n\n    while (mustStayOpen) {\n        context->startFrame();\n        window->draw(object);\n        context->endFrame();\n\n        Ikyr::Renderer::ExternalEvent event;\n        while (window->pollEvent(event))\n        {\n            if (event.type == Ikyr::Renderer::Events::CLOSE_WINDOW || event.type == IRE::Events::KEY_PRESSED)\n            {\n                if (event.keyCode == 0 || event.keyCode == IRE::Events::KEY_ESCAPE)\n                    mustStayOpen = false;\n            }\n        }\n    }\n\n    window->waitAllFrames();\n    context->markForDelete(object);\n    delete window;\n    delete camera;\n    delete context;\n    delete system;\n\n    return 0;\n}\n')))}d.isMDXComponent=!0}}]);